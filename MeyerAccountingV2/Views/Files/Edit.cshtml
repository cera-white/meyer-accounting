@model MeyerAccountingV2.EF.File

@{
    ViewBag.Title = "Edit File";
    ViewBag.FooterInfo = "<a href='@Url.Action('Contact', 'Home')'>Contact</a>";
}

<div class="container">
    <div class="row pt-xl mb-lg">
        <div class="col-md-12">
            <h1 class="mt-xl mb-none">@ViewBag.Title</h1>
            <div class="divider divider-primary divider-small mb-xl">
                <hr>
            </div>

            @using (Html.BeginForm("Edit", "Files", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Update an existing File</h4>
                    <p>If there is a Link associated with this file, the Link URL will be updated automatically if the filename is changed.</p>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.FileId)
                    @Html.HiddenFor(model => model.Filename)
                    @Html.HiddenFor(model => model.LinkId)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Filename, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <span class="control-label col-md-12 text-left">@Model.Filename</span>
                            @Html.ValidationMessageFor(model => model.Filename, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">New Filename (optional)</label>
                        <div class="col-md-10">
                            <input type="file" class="control-label col-md-12 text-left" name="filename2" />
                        </div>
                    </div>

                    @*<div class="form-group">
                        <label class="control-label col-md-2">Link Name</label>
                        <div class="col-md-10">
                            @Html.DropDownList("LinkId", null, "-- Select --", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LinkId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Manage")
            </div>

        </div>
    </div>
</div>



